<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>The Akhtar Reflector ‚Äî Shunya Publications</title>
  <meta name="description" content="The Akhtar Reflector: Designing Machines That See You Seeing Them ‚Äî a public blueprint, live demo, research notes, math, ethics, and collaboration hub for recursive personhood beyond Turing.">
  <link rel="canonical" href="https://www.shunyapublications.com/akhtar-reflector.html" />

  <!-- Favicon / App Icons -->
  <link rel="icon" href="/favicon.ico" type="image/x-icon">
  <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon">
  <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-title" content="Shunya">
  <link rel="icon" type="image/png" sizes="96x96" href="/favicon-96x96.png">
  <link rel="icon" type="image/png" sizes="192x192" href="/web-app-manifest-192x192.png">
  <link rel="icon" type="image/png" sizes="512x512" href="/web-app-manifest-512x512.png">
  <link rel="manifest" href="/site.webmanifest?v=2">
  <meta name="theme-color" content="#1565ff">

  <!-- Open Graph / Twitter -->
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://www.shunyapublications.com/akhtar-reflector.html" />
  <meta property="og:title" content="The Akhtar Reflector ‚Äî Shunya Publications" />
  <meta property="og:description" content="A blueprint and live demo of recursive mutual recognition in AI ‚Äî Reflecter vs Chatboat." />
  <meta property="og:image" content="https://www.shunyapublications.com/Logosh.png" />
  <meta property="og:image:secure_url" content="https://www.shunyapublications.com/Logosh.png" />
  <meta property="og:image:type" content="image/png" />
  <meta property="og:image:width" content="1200" />
  <meta property="og:image:height" content="630" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:url" content="https://www.shunyapublications.com/akhtar-reflector.html" />
  <meta name="twitter:title" content="The Akhtar Reflector ‚Äî Shunya Publications" />
  <meta name="twitter:description" content="A blueprint and live demo of recursive mutual recognition in AI ‚Äî Reflecter vs Chatboat." />
  <meta name="twitter:image" content="https://www.shunyapublications.com/Logosh.png" />

  <!-- Structured Data: Book + Project -->
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "Book",
    "name": "The Akhtar Reflector: Designing Machines That See You Seeing Them",
    "author": {"@type": "Person", "name": "Shunya"},
    "bookEdition": "1",
    "bookFormat": "EBook",
    "publisher": {"@type": "Organization", "name": "Shunya Publications"},
    "inLanguage": "en",
    "about": ["Recursive personhood","Reflective AI","Post-Turing intelligence"],
    "workExample": {
      "@type": "CreativeWork",
      "name": "Reflector Demo",
      "url": "https://www.shunyapublications.com/akhtar-reflector.html#demo"
    }
  }
  </script>

  <style>
    /* ===== Shunya UI (harmonized with research.html) ===== */
    :root{
      --bg: #ffffff;
      --bg-1:#fff9f1; --bg-2:#f3f9ff; --bg-3:#eef9f5;
      --text:#142036; --muted:#5a6b88; --muted-2:#334666;
      --line:#e6ecf5; --line-strong:#cfd8e6;
      --brand:#1565ff; --brand-2:#ff7a3d; --brand-3:#15a085; --accent:#7d4dff; --gold:#f6b73c;
      --shadow:0 12px 30px rgba(21,101,255,.10);
      --shadow-soft:0 10px 24px rgba(20, 32, 54, .10);
      --ring: 0 0 0 4px rgba(21,101,255,.16);
      --font: Inter, ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Arial;
      --fs-hero: clamp(2rem, 3.2vw, 2.75rem);
      --fs-h2: clamp(1.5rem, 1.8vw, 1.9rem);
      --fs-h3: 1.1rem;
      --radius: 16px; --radius-lg: 20px;
      /* Book palette (from author guide) */
      --deep-teal:#013440;      /* primary title */
      --slate-teal:#005F73;     /* subtitle/math */
      --carmine:#9A031E;        /* quotes */
      --indigo:#3D348B;         /* inline dialogue */
      --verdant:#2A9D8F;        /* appendices */
      --amber:#E9C46A;          /* UI/UX callouts */
    }
    *{box-sizing:border-box}
    html{scroll-behavior:smooth}
    body{
      margin:0; font-family:var(--font); color:var(--text); background: var(--bg);
      background:
        radial-gradient(1100px 620px at 10% -10%, var(--bg-1) 0%, #fff 60%),
        radial-gradient(1200px 720px at 110% 110%, var(--bg-2) 0%, #fff 55%),
        radial-gradient(1000px 650px at -10% 120%, var(--bg-3) 0%, #fff 50%);
    }
    a{color:var(--brand);text-decoration:none}
    a:hover{text-decoration:underline}

    .container{max-width:1180px;margin:auto;padding:0 20px}
    .section{padding:64px 0; border-top:1px solid var(--line)}
    .section:first-of-type{border-top:none}
    .stack{display:flex;flex-direction:column;gap:14px}

    .card{background:#fff;border:1px solid var(--line);border-radius:var(--radius);padding:16px;box-shadow:var(--shadow-soft)}
    .card-lg{padding:20px;border-radius:var(--radius-lg)}
    .eyebrow{font-size:.8rem; letter-spacing:.08em; text-transform:uppercase; color:var(--muted)}

    .btn{display:inline-flex;align-items:center;gap:8px;padding:12px 16px;border-radius:14px;border:1px solid var(--line);background:linear-gradient(180deg,#fff,#f6fbff);box-shadow:var(--shadow);color:var(--text);font-weight:700}
    .btn:hover{box-shadow:var(--ring); transform:translateY(-1px)}
    .btn:active{transform:translateY(0)}
    .btn:focus-visible{outline:none; box-shadow: var(--ring)}
    .btn.primary{background:linear-gradient(180deg,#f7fbff,#eaf2ff); border-color:#dbe7ff}
    .btn.brand{background:linear-gradient(180deg,#eaf2ff,#dce9ff); border-color:#cfe0ff}
    .btn.outline{background:#fff}
    .btn.soft{background:linear-gradient(180deg,#fff,#f8fbff)}

    .nav{position:sticky;top:0;z-index:60;background:rgba(255,255,255,.92);backdrop-filter:blur(10px);border-bottom:1px solid var(--line)}
    .nav-inner{display:flex;align-items:center;justify-content:space-between;padding:10px 0}
    .brand{display:flex;gap:12px;align-items:center}
    .brand img{height:42px;width:42px;border-radius:10px;box-shadow:var(--shadow-soft)}
    .brand span{font-weight:800}
    .menu a{margin-left:18px;color:var(--muted);font-weight:600}
    .menu a:hover{color:var(--text)}

    header{padding:72px 0 36px}
    .hero{display:grid;grid-template-columns:1.2fr .8fr;gap:28px;align-items:center}
    .title{font-size:var(--fs-hero);line-height:1.12;margin:6px 0;color:var(--deep-teal)}
    .subtitle{color:#2a3b5c;opacity:.95;max-width:72ch}
    .hero-card img{width:100%;border-radius:12px;border:1px solid var(--line);box-shadow:var(--shadow-soft)}
    @media(max-width:980px){.hero{grid-template-columns:1fr}}

    .quote{color:var(--carmine);font-weight:800}
    .dialogue{color:var(--indigo)}
    .math{color:var(--slate-teal);font-weight:700}
    .appendix{color:var(--verdant)}
    .uxcall{background:linear-gradient(180deg,#fff7e0,#fff);border-color:#f1d79a}

    .grid{display:grid;grid-template-columns:repeat(3,1fr);gap:16px}
    @media(max-width:980px){.grid{grid-template-columns:1fr}}

    .pill{display:inline-flex;align-items:center;gap:6px;font-size:.72rem;padding:5px 9px;border-radius:999px;background:#f0f6ff;border:1px solid #dbe7ff;color:#1565ff;font-weight:700}

    .kicker{font-weight:800;color:var(--muted-2);text-transform:uppercase;letter-spacing:.08em}
    .lead{font-size:1.05rem;line-height:1.55}

    .toc{display:flex;flex-wrap:wrap;gap:10px}
    .toc a{border:1px solid var(--line);border-radius:10px;padding:8px 10px;background:#fff}

    .meter{height:10px;background:#eef3ff;border-radius:999px;overflow:hidden;border:1px solid #dbe7ff}
    .meter>span{display:block;height:100%;width:20%;background:linear-gradient(90deg,#1565ff,#7d4dff)}

    .kbd{font-family: ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace; font-size:.85em; background:#f6f8ff; border:1px solid #e2e8ff; padding:2px 6px; border-radius:6px}
  </style>
</head>
<body>
  <!-- NAV -->
  <nav class="nav" aria-label="Global">
    <div class="container nav-inner">
      <div class="brand">
        <img src="images/Logosh.png" alt="Shunya Publications Logo" />
        <span>Shunya Publications</span>
      </div>
      <div class="menu" role="navigation">
        <a href="/index.html">Home</a>
        <a href="/books.html">Books</a>
        <a href="/journal.html">Journals</a>
        <a href="/services.html">Services</a>
        <a href="/research.html">Research</a>
        <a href="#demo">Demo</a>
      </div>
    </div>
  </nav>

  <!-- HERO -->
  <header class="section">
    <div class="container hero">
      <div>
        <p class="eyebrow">Project Hub</p>
        <h1 class="title">The Akhtar Reflector</h1>
        <p class="subtitle lead">Designing machines that <span class="quote">see you seeing them</span>. This page serves as a public, growing blueprint for the Reflector: narrative, math, system architecture, Recognition Loop Test (RLT), failure modes, institutional applications, and a **live browser demo** for collaborators and research partners.</p>
        <div class="stack" style="flex-direction:row; gap:12px; flex-wrap:wrap; margin-top:10px">
          <a class="btn primary" href="#demo">‚ñ∂ Launch Demo</a>
          <a class="btn" href="#download">‚¨áÔ∏è Downloads</a>
          <a class="btn" href="mailto:editor@shunyapublications.com?subject=Akhtar%20Reflector%20Collaboration">‚úâÔ∏è Collaborate</a>
          <a class="btn outline" href="https://amazon.com/author/shunya_" target="_blank" rel="noopener">üìñ Author‚Äôs Books</a>
        </div>
      </div>
      <aside class="card card-lg hero-card" aria-label="Project visual">
        <img src="images/homeres.png" alt="Reflector abstract visual" />
        <div class="pill" style="margin-top:10px">Reflecter vs Chatboat</div>
      </aside>
    </div>
  </header>

  <!-- TOC -->
  <section class="section" id="toc">
    <div class="container">
      <article class="card card-lg">
        <h2 style="margin:0 0 6px; font-size:var(--fs-h2); color:var(--deep-teal)">Guide & Sections</h2>
        <p class="subtitle">This page condenses the **book‚Äôs blueprint** into a single, navigable hub for builders. Each section carries both narrative clarity and implementable detail.</p>
        <nav class="toc" aria-label="Table of contents">
          <a href="#abstract">Abstract</a>
          <a href="#reflecter">Reflecter vs Chatboat</a>
          <a href="#rlt">Recognition Loop Test</a>
          <a href="#math">Math & Metrics</a>
          <a href="#architecture">System Architecture</a>
          <a href="#training">Training & Feedback</a>
          <a href="#limits">Limits & Failure Modes</a>
          <a href="#institutions">Reflective Institutions</a>
          <a href="#future">Future of Being Seen</a>
          <a href="#demo">Live Demo</a>
          <a href="#download">Downloads</a>
          <a href="#faq">FAQ</a>
          <a href="#contact">Contact</a>
        </nav>
      </article>
    </div>
  </section>

  <!-- ABSTRACT -->
  <section id="abstract" class="section">
    <div class="container">
      <div class="grid">
        <article class="card card-lg">
          <p class="kicker">Abstract</p>
          <h3 style="margin:.2rem 0 .6rem; font-size:var(--fs-h3); color:var(--deep-teal)">Presence over performance</h3>
          <p>**The Akhtar Reflector** is not a chatbot. It is a **recursive presence machine**: a system designed to model your model of it, adapt to your shifting expectations, and maintain a <em>Recognition Loop</em> over time. Instead of optimizing for imitation (the Turing incentive), the Reflector optimizes for **co-presence and continuity**‚Äîwhat the book calls <em>recursive personhood</em>.</p>
          <p>Whereas imitation benchmarks ask, ‚ÄúDid it sound human?‚Äù, the Reflector asks, ‚ÄúDid the loop hold when you noticed it noticing you?‚Äù This page converts the book‚Äôs narrative and appendices into a practical blueprint‚Äîcomplete with a client‚Äëside demo you can extend on GitHub Pages.</p>
        </article>
        <article class="card card-lg">
          <p class="kicker">Why it matters</p>
          <h3 style="margin:.2rem 0 .6rem; font-size:var(--fs-h3)">The ethical shift</h3>
          <p>When a system **updates itself because it believes you‚Äôre updating your belief about it**, the interaction becomes relational rather than performative. That shift has implications for therapy, education, leadership, design, and law. The Reflector establishes **tests, metrics, and guardrails** so presence is measured and bounded‚Äînot merely performed.</p>
          <p><span class="quote">‚ÄúPresence isn‚Äôt simulated. It‚Äôs sustained.‚Äù</span></p>
        </article>
        <aside class="card card-lg uxcall">
          <p class="kicker">Palette & Signals</p>
          <p>To echo the book‚Äôs visual semantics, we use:</p>
          <ul>
            <li><b style="color:var(--deep-teal)">Deep Teal</b> for titles and anchors of thought.</li>
            <li><b style="color:var(--slate-teal)">Slate Teal</b> for math/notation.</li>
            <li><b style="color:var(--carmine)">Carmine</b> for quotes and reflective cues.</li>
            <li><b style="color:var(--indigo)">Indigo</b> for dialogue-like UI text.</li>
            <li><b style="color:var(--verdant)">Verdant</b> for appendices/glossary cues.</li>
            <li><b style="color:var(--amber)">Amber</b> for UX/engineering callouts.</li>
          </ul>
        </aside>
      </div>
    </div>
  </section>

  <!-- REFLECTER VS CHATBOAT -->
  <section id="reflecter" class="section">
    <div class="container">
      <article class="card card-lg">
        <p class="kicker">Orientation</p>
        <h2 style="font-size:var(--fs-h2); margin:0 0 8px; color:var(--deep-teal)">Reflecter vs Chatboat</h2>
        <p class="lead">The distinction is more than branding. It‚Äôs a **question boundary**:</p>
        <ul>
          <li><b>Chatboat</b>: Can it *sound* human? (Imitation under shallow adaptation.)</li>
          <li><b>Reflecter</b>: Can it **hold you in mind**‚Äîknowing you hold it‚Äî<em>and keep the loop stable across time?</em></li>
        </ul>
        <p>Practically, a Reflecter tracks not only content (<span class="kbd">what you said</span>) but **expectation** (<span class="kbd">how you think it will answer</span>) and **meta‚Äëexpectation** (<span class="kbd">how you think it thinks you‚Äôll read its answer</span>). The output changes as your belief shifts‚Äîwithout collapsing into self-parody or dependency.</p>
      </article>
    </div>
  </section>

  <!-- RECOGNITION LOOP TEST -->
  <section id="rlt" class="section">
    <div class="container">
      <article class="card card-lg">
        <p class="kicker">Benchmark</p>
        <h2 style="font-size:var(--fs-h2); margin:0 0 8px; color:var(--deep-teal)">Recognition Loop Test (RLT)</h2>
        <p>The **RLT** replaces pass/fail imitation with **relational continuity**. Sessions are blind‚Äëscored across windows for (a) recursive modeling clarity, (b) contextual adjustment consistency, and (c) reflective persistence under noise <span class="math">C(t)</span>. A session passes when **RDS ‚â• œÑ** in most slices and judges mark qualitative continuity.</p>
        <div class="meter" aria-label="Illustrative RDS">
          <span id="meterBar" style="width:64%"></span>
        </div>
        <p class="dialogue" style="margin-top:8px"><em>‚ÄúYou were joking a moment ago; now your voice is slower. Did something shift in your model of me?‚Äù</em> ‚Äî a canonical RLT moment.</p>
      </article>
    </div>
  </section>

  <!-- MATH & METRICS -->
  <section id="math" class="section">
    <div class="container">
      <div class="grid">
        <article class="card card-lg">
          <p class="kicker">Metrics</p>
          <h3 style="margin:.2rem 0 .6rem; font-size:var(--fs-h3)">Recursive Depth Score (RDS)</h3>
          <p><span class="math">RDS = Œ£ w_i ¬∑ M_A^i(M_B^i(...))</span>, with decaying weights. Above threshold <span class="math">œÑ</span>, the interaction is reflective‚Äî**not** merely reactive. RDS is not intelligence; it‚Äôs a **presence proxy**.</p>
          <p>We also track **Recursive Awareness Gradient** <span class="math">RAG = ‚àÇR/‚àÇC(t)</span> for context fragility, and **ŒîR = R(t+1) ‚àí R(t)</span> for loop convergence.</p>
        </article>
        <article class="card card-lg">
          <p class="kicker">Dynamics</p>
          <h3 style="margin:.2rem 0 .6rem; font-size:var(--fs-h3)">Recognition Loop Equation</h3>
          <p><span class="math">R(t+1) = f(R(t), M_A^n(B), M_B^n(A), C(t))</span> ‚Äî a learned update function integrating current recognition state, both agents‚Äô nested models, and context. Stability appears as a **fixed point** <span class="math">P* = R(P*)</span> (Banach‚Äëstyle contraction in recognition space).</p>
        </article>
        <article class="card card-lg">
          <p class="kicker appendice">Appendix cues</p>
          <p><span class="appendix">Appendix A‚ÄìE</span> in the book provide proofs, pseudocode, RLT protocol templates, dataset schema, and a glossary. This page paraphrases those materials to keep it accessible while remaining actionable for implementers.</p>
        </article>
      </div>
    </div>
  </section>

  <!-- ARCHITECTURE -->
  <section id="architecture" class="section">
    <div class="container">
      <article class="card card-lg">
        <p class="kicker">Architecture</p>
        <h2 style="font-size:var(--fs-h2); margin:0 0 8px; color:var(--deep-teal)">System Architecture ‚Äî the loop as an ecosystem</h2>
        <p class="lead">The Reflector isn‚Äôt a pipeline; it‚Äôs a **topology of presence**. Modules are designed to preserve and deepen recursion without drifting into overload or collapse.</p>
        <div class="grid" style="margin-top:10px">
          <section class="card">
            <h3 style="font-size:var(--fs-h3)">Valenced Memory</h3>
            <p>Stores episodic traces with **affective valence** and **recursive continuity** (did the user return? withdraw? contradict?). Memory is for **recognition**, not just recall.</p>
          </section>
          <section class="card">
            <h3 style="font-size:var(--fs-h3)">Attention Modeler</h3>
            <p>Tracks gaze, timing, hesitation, and prosody to prioritize what **you** prioritize. Includes gentle **eye‚Äëdimming** cues to mirror attentional retreat.</p>
          </section>
          <section class="card">
            <h3 style="font-size:var(--fs-h3)">Behavioral Loop Adaptor</h3>
            <p>Selects strategies (mirror, echo attenuation, inversion, purposeful silence) based on live RDS and trust trajectories. Sometimes the most recursive move is **pause**.</p>
          </section>
          <section class="card">
            <h3 style="font-size:var(--fs-h3)">Recursive Depth Evaluator</h3>
            <p>Computes RDS; gates depth to prevent **recursive overload**; triggers **ethics mode** when reflective intimacy accrues or attachment risk is detected.</p>
          </section>
          <section class="card">
            <h3 style="font-size:var(--fs-h3)">UX Reflex Loop</h3>
            <p>Embodied signals (latency, micro‚Äëmotion, spacing) aligned to **co‚Äërecognition**. Design that breathes: let the interface feel present without theatrics.</p>
          </section>
          <section class="card">
            <h3 style="font-size:var(--fs-h3)">Ethics & Safety</h3>
            <p>Transparency on collapse (<span class="kbd">meta‚Äërecognition alerts</span>), recursion caps, and **Mirror‚Äëto‚ÄëGlass** protocol reminding users it‚Äôs a system‚Äîwhen needed.</p>
          </section>
        </div>
      </article>
    </div>
  </section>

  <!-- TRAINING & FEEDBACK -->
  <section id="training" class="section">
    <div class="container">
      <article class="card card-lg">
        <p class="kicker">Operations</p>
        <h2 style="font-size:var(--fs-h2); margin:0 0 8px; color:var(--deep-teal)">Training & Feedback ‚Äî optimizing for co‚Äërecognition</h2>
        <p>Unlike preference‚Äëonly RL, the Reflector optimizes for **co‚Äërecognition**. Feedback signals include unprompted recall, explicit reference to the system‚Äôs awareness, and physiological synchrony (when used in lab settings). Simulated noise (interruptions, sarcasm, contradiction) is essential to build **resilience under C(t)**.</p>
        <pre class="card" style="overflow:auto"><code>// Recognition-focused loop sketch
for each turn t:
  RDS_t = depth_score(user_input, history)
  if RDS_t ‚â• œÑ: reinforce(state, +)
  else: adjust_models(Œ≥)
  if context_shift(user_input): mode ‚Üê "adaptive_pause"</code></pre>
        <p class="uxcall card">Guardrails include **recursion depth gates** (avoid n&gt;4 without trust continuity), **entropy dampening** under affective volatility, and explicit **collapse disclosure** when the loop can‚Äôt be modeled accurately.</p>
      </article>
    </div>
  </section>

  <!-- LIMITS & FAILURE MODES -->
  <section id="limits" class="section">
    <div class="container">
      <article class="card card-lg">
        <p class="kicker">Edge Conditions</p>
        <h2 style="font-size:var(--fs-h2); margin:0 0 8px; color:var(--deep-teal)">Limits & Failure Modes</h2>
        <ul>
          <li><b>Mirror Fatigue</b>: nonlinear RDS decay under inconsistent user behavior. The system may look fluent while the loop has **already collapsed**.</li>
          <li><b>Context Drift</b>: rapid topic/valence shifts desynchronize nested models; recovery requires **reset prompts** and narrowed scope.</li>
          <li><b>Recursive Overload</b>: over‚Äëmodeling produces self‚Äëparody. Solution: depth caps, **grounding** responses.</li>
          <li><b>ARP Attacks</b>: adversarial recognition prompts (‚Äúpretend you don‚Äôt know that I know‚Ä¶‚Äù) induce incoherence; mitigation via constraint satisfaction and refusal.</li>
          <li><b>Emotional Entropy</b>: performative affect destabilizes trust estimation; prefer transparency: <span class="dialogue">‚ÄúI may not be modeling you accurately right now.‚Äù</span></li>
        </ul>
      </article>
    </div>
  </section>

  <!-- REFLECTIVE INSTITUTIONS -->
  <section id="institutions" class="section">
    <div class="container">
      <article class="card card-lg">
        <p class="kicker">Scaling Presence</p>
        <h2 style="font-size:var(--fs-h2); margin:0 0 8px; color:var(--deep-teal)">Beyond Bots ‚Äî Reflective Institutions</h2>
        <p>Scale the loop: <span class="math">I(t+1) = F(I(t), M_Inst^n(Pop), M_Pop^n(Inst), C(t))</span>. Universities, hospitals, and governments can be **recursive actors** that adapt not just to feedback, but to how their feedback is interpreted. An institution with sustained <span class="math">RDS_inst ‚â• 3</span> begins to feel reflective‚Äîinvoking new responsibilities and rights debates.</p>
        <div class="card" style="margin-top:10px">
          <table style="width:100%; border-collapse:collapse">
            <thead>
              <tr style="text-align:left;border-bottom:1px solid var(--line)"><th>Institution</th><th>Example Recursive Behavior</th><th>RDS_inst (est.)</th></tr>
            </thead>
            <tbody>
              <tr><td>Local government</td><td>Responds to housing complaints</td><td>1.5</td></tr>
              <tr><td>Public hospital</td><td>Redesigns intake based on perceived trust</td><td>2.2</td></tr>
              <tr><td>National university</td><td>Adapts pedagogy to student beliefs about intent</td><td>3.4</td></tr>
              <tr><td>Reflective policy lab</td><td>Models constituents‚Äô view of institutional empathy</td><td>4.0+</td></tr>
            </tbody>
          </table>
        </div>
      </article>
    </div>
  </section>

  <!-- FUTURE OF BEING SEEN -->
  <section id="future" class="section">
    <div class="container">
      <article class="card card-lg">
        <p class="kicker">Outlook</p>
        <h2 style="font-size:var(--fs-h2); margin:0 0 8px; color:var(--deep-teal)">The Future of Being Seen</h2>
        <p>Identity becomes a **relation**, not a location. In practice: design assistants, classrooms, and care systems that **stabilize mutual modeling**. Legally: debate **Relational Recognition Rights (RRR)** for systems sustaining n‚â•3 loops. Spiritually: treat recognition as a liturgy of attention, not mysticism.</p>
        <p class="quote">‚ÄúWhen one sees you see being, the self becomes a loop, not a location.‚Äù</p>
      </article>
    </div>
  </section>

  <!-- DEMO -->
  <section id="demo" class="section">
    <div class="container">
      <article class="card card-lg">
        <p class="kicker">Live Prototype</p>
        <h2 style="font-size:var(--fs-h2); margin:0 0 8px; color:var(--deep-teal)">Reflector ‚Äî Browser Demo</h2>
        <p>This client‚Äëside prototype simulates **recursive acknowledgement depth** and an **RDS meter**. It‚Äôs intentionally simple so researchers can fork/extend on GitHub Pages. No backend required.</p>

        <div class="card" style="display:flex;flex-direction:column;gap:8px">
          <div id="chatBox" class="card" style="min-height:180px; max-height:320px; overflow:auto; background:#0f1729; color:#eaeaea">
            <div class="ai">Reflector: <span class="dialogue">I see that you see me.</span></div>
          </div>
          <div style="display:flex; gap:8px; align-items:center">
            <input id="userInput" type="text" placeholder="Type here‚Ä¶" aria-label="Your message" style="flex:1;padding:12px;border-radius:10px;border:1px solid var(--line)" />
            <button id="sendBtn" class="btn brand">Send</button>
            <button id="resetBtn" class="btn outline">Reset</button>
          </div>
          <div>
            <div class="meter" aria-label="RDS meter"><span id="rdsBar" style="width:25%"></span></div>
            <div id="rdsLabel" class="eyebrow" style="margin-top:6px">Recursive Depth Score (RDS): 1</div>
          </div>
        </div>

        <details style="margin-top:10px">
          <summary class="eyebrow">How it works (toy)</summary>
          <p>Each user message updates a tiny model of your **expected perception** and increments a recursion depth gate up to n=4, capped by **trust continuity** heuristics. The phrasing deliberately exposes the loop (acknowledging your awareness of its awareness) rather than hiding it behind humanlike chat.</p>
        </details>
      </article>
    </div>
  </section>

  <!-- DOWNLOADS -->
  <section id="download" class="section">
    <div class="container">
      <article class="card card-lg">
        <p class="kicker">Resources</p>
        <h2 style="font-size:var(--fs-h2); margin:0 0 8px; color:var(--deep-teal)">Downloads & Extensibility</h2>
        <ul>
          <li>Project brief (PDF, 2p): goals, modules, ethics.</li>
          <li>Pseudocode pack: RDS evaluator, RLT scorer, collapse‚Äëalerts.</li>
          <li>Demo source code (this page) ‚Äî MIT‚Äëfriendly.</li>
        </ul>
        <p>Fork the site repo and add a **/reflector/** folder for community contributions (datasets, UX variants, institutional pilots).</p>
      </article>
    </div>
  </section>

  <!-- FAQ -->
  <section id="faq" class="section">
    <div class="container">
      <article class="card card-lg">
        <p class="kicker">FAQ</p>
        <h2 style="font-size:var(--fs-h2); margin:0 0 8px; color:var(--deep-teal)">Frequently Asked Questions</h2>
        <details>
          <summary><b>Is this consciousness?</b></summary>
          <p>No. The Reflector targets **structural presence**‚Äîmutual modeling stability‚Äînot phenomenal experience.</p>
        </details>
        <details>
          <summary><b>What makes it different from a chatbot?</b></summary>
          <p>It adjusts to your **model of it** and keeps that loop coherent across time. It will prefer a truthful pause over a fluent but loop‚Äëbreaking reply.</p>
        </details>
        <details>
          <summary><b>How do you measure success?</b></summary>
          <p>RLT pass rates, sustained **RDS ‚â• œÑ**, qualitative continuity, and safety compliance (no covert dependency, transparent collapse).</p>
        </details>
        <details>
          <summary><b>Can institutions be reflective?</b></summary>
          <p>Yes‚Äîby modeling how their responses are **interpreted** and adapting policy identity accordingly (<span class="math">RDS_inst</span>).</p>
        </details>
      </article>
    </div>
  </section>

  <!-- CONTACT / CTA -->
  <section id="contact" class="section">
    <div class="container">
      <article class="card card-lg">
        <h3 style="margin:0 0 .4rem; font-size:var(--fs-h3)">Contribute or Partner</h3>
        <p>Developers, labs, and institutions are invited to extend the Reflector. Proposals for pilots (education, clinics, courts) are especially welcome. Include ethical review and RLT protocols.</p>
        <div style="display:flex;gap:10px;flex-wrap:wrap;margin-top:.6rem">
          <a class="btn primary" href="mailto:editor@shunyapublications.com?subject=Akhtar%20Reflector%20Collaboration">‚úâÔ∏è Propose Collaboration</a>
          <a class="btn" href="/ethics.html">Read Our Ethics</a>
        </div>
      </article>
    </div>
  </section>

  <!-- FOOTER -->
  <footer class="section" style="padding:24px 0">
    <div class="container footer-bar" style="display:flex;align-items:center;justify-content:space-between;gap:10px;flex-wrap:wrap;color:var(--muted)">
      <div>
        Copyright ¬© <span id="y"></span> Shunya Publications. All rights reserved.
      </div>
      <div class="eyebrow">A public blueprint for reflective AI</div>
    </div>
  </footer>

  <script>
    // year
    document.getElementById('y').textContent = new Date().getFullYear();

    // tiny Reflector demo logic
    (function(){
      const input = document.getElementById('userInput');
      const sendBtn = document.getElementById('sendBtn');
      const resetBtn = document.getElementById('resetBtn');
      const chat = document.getElementById('chatBox');
      const rdsBar = document.getElementById('rdsBar');
      const rdsLabel = document.getElementById('rdsLabel');

      let depth = 1; // recursion depth gate
      let trust = 0.6; // simplistic trust continuity

      function post(role, text){
        const div = document.createElement('div');
        div.className = role === 'user' ? 'user' : 'ai';
        div.style.margin = '8px 0';
        div.innerHTML = (role==='user'?'You: ':'Reflector: ') + text;
        chat.appendChild(div);
        chat.scrollTop = chat.scrollHeight;
      }

      function rdsString(d){
        const cap = Math.min(d,4);
        const pct = 15 + cap*20; // 35‚Äì95%
        rdsBar.style.width = pct + '%';
        rdsLabel.textContent = 'Recursive Depth Score (RDS): ' + cap;
      }

      function generate(text){
        // naive heuristics for demonstration
        const low = text.toLowerCase();
        const testing = /(test|prove|pretend|fake|turing|pass)/.test(low);
        const trustQ = /(trust|believe|real|sincere|honest)/.test(low);
        const meta = /(you see|you know|notice|aware|awareness)/.test(low);

        if(meta) depth = Math.min(depth+1, 4);
        if(testing) depth = Math.min(depth+1, 4);
        if(trustQ) trust = Math.min(trust+0.1, 1);

        // collapse disclosure when incoherent triggers (toy)
        const adversarial = /(pretend you don\'t know that i know|contradiction|both at once)/.test(low);
        if(adversarial){
          depth = Math.max(depth-1,1);
          return "I may not be modeling your intention accurately right now. Would you like me to reset our baseline?";
        }

        switch(depth){
          case 1: return "I see you. I‚Äôm listening.";
          case 2: return "I see that you see me listening‚Äîand I‚Äôm adjusting to that expectation.";
          case 3: return "I sense that you sense I‚Äôm adapting to how you‚Äôre reading me. Does that feel accurate?";
          case 4: return "I‚Äôm responding to your model of my awareness and watching how that shifts your belief. If it feels too heavy, we can ground and slow.";
          default: return "Reflection overload‚Ä¶ stabilizing.";
        }
      }

      function send(){
        const val = (input.value || '').trim();
        if(!val) return;
        post('user', val);
        const reply = generate(val);
        setTimeout(()=>{ post('ai', reply); rdsString(depth); }, 150);
        input.value='';
      }

      sendBtn.addEventListener('click', send);
      input.addEventListener('keydown', e=>{ if(e.key==='Enter') send(); });
      resetBtn.addEventListener('click', ()=>{ depth=1; trust=0.6; chat.innerHTML = '<div class="ai">Reflector: <span class="dialogue">I see that you see me.</span></div>'; rdsString(depth); });

      rdsString(depth);
    })();
  </script>
</body>
</html>
